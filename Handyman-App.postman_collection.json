{
	"info": {
		"_postman_id": "handyman-auth-collection-2024",
		"name": "Handyman Management App - Complete API",
		"description": "Complete authentication system with MongoDB integration, email verification, session management, and payment processing for the Handyman Management App.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "handyman-api-v2"
	},
	"item": [
		{
			"name": "Health & Documentation",
			"item": [
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/health",
							"host": ["{{baseUrl}}"],
							"path": ["health"]
						},
						"description": "Check API health status and get basic information."
					},
					"response": []
				},
				{
					"name": "API Documentation",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api-docs",
							"host": ["{{baseUrl}}"],
							"path": ["api-docs"]
						},
						"description": "Access the interactive Swagger UI documentation."
					},
					"response": []
				},
				{
					"name": "OpenAPI Spec",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api-docs/openapi.json",
							"host": ["{{baseUrl}}"],
							"path": ["api-docs", "openapi.json"]
						},
						"description": "Get the OpenAPI 3.0 specification in JSON format."
					},
					"response": []
				},
				{
					"name": "Postman Collection",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/handyman-app.postman_collection.json",
							"host": ["{{baseUrl}}"],
							"path": ["handyman-app.postman_collection.json"]
						},
						"description": "Download the complete Postman collection."
					},
					"response": []
				}
			],
			"description": "Health check and documentation endpoints."
		},
		{
			"name": "Inngest Integration",
			"item": [
				{
					"name": "Inngest Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/inngest",
							"host": ["{{baseUrl}}"],
							"path": ["api", "inngest"]
						},
						"description": "Check Inngest integration health and configuration status."
					},
					"response": []
				},
				{
					"name": "Inngest Sync (PUT)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/inngest",
							"host": ["{{baseUrl}}"],
							"path": ["api", "inngest"]
						},
						"description": "Sync Inngest functions and configuration."
					},
					"response": []
				},
				{
					"name": "Inngest Webhook",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Inngest-Signature",
								"value": "{{inngestSignature}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"auth/email.verification.requested\",\n  \"data\": {\n    \"email\": \"test@example.com\",\n    \"token\": \"verification-token-123\",\n    \"userId\": \"user-123\"\n  }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/inngest",
							"host": ["{{baseUrl}}"],
							"path": ["api", "inngest"]
						},
						"description": "Inngest webhook endpoint for processing events."
					},
					"response": []
				}
			],
			"description": "Inngest event processing and webhook endpoints."
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register Customer",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"customer@example.com\",\n  \"password\": \"Customer123!\",\n  \"role\": \"customer\",\n  \"profile\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"phone\": \"+1234567890\"\n  }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth/register",
							"host": ["{{baseUrl}}"],
							"path": ["api", "v1", "auth", "register"]
						},
						"description": "Register a new customer account."
					},
					"response": []
				},
				{
					"name": "Register Handyman",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"handyman@example.com\",\n  \"password\": \"Handyman123!\",\n  \"role\": \"handyman\",\n  \"profile\": {\n    \"firstName\": \"Jane\",\n    \"lastName\": \"Smith\",\n    \"phone\": \"+1234567891\",\n    \"skills\": [\"plumbing\", \"electrical\"],\n    \"experience\": \"5 years\",\n    \"hourlyRate\": 25\n  }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth/register",
							"host": ["{{baseUrl}}"],
							"path": ["api", "v1", "auth", "register"]
						},
						"description": "Register a new handyman account."
					},
					"response": []
				},
				{
					"name": "Register Admin",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"admin@example.com\",\n  \"password\": \"Admin123!\",\n  \"role\": \"admin\",\n  \"profile\": {\n    \"firstName\": \"Admin\",\n    \"lastName\": \"User\",\n    \"phone\": \"+1234567892\"\n  }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth/register",
							"host": ["{{baseUrl}}"],
							"path": ["api", "v1", "auth", "register"]
						},
						"description": "Register a new admin account."
					},
					"response": []
				},
				{
					"name": "Verify Email",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth/verify-email/{{verificationToken}}",
							"host": ["{{baseUrl}}"],
							"path": ["api", "v1", "auth", "verify-email", "{{verificationToken}}"]
						},
						"description": "Verify email address using verification token."
					},
					"response": []
				},
				{
					"name": "Login",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{userEmail}}\",\n  \"password\": \"{{userPassword}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth/login",
							"host": ["{{baseUrl}}"],
							"path": ["api", "v1", "auth", "login"]
						},
						"description": "Login with email and password.",
						"event": [
							{
								"listen": "test",
								"script": {
									"exec": [
										"if (pm.response.code === 200) {",
										"    const response = pm.response.json();",
										"    if (response.success && response.data) {",
										"        pm.environment.set('accessToken', response.data.accessToken);",
										"        pm.environment.set('refreshToken', response.data.refreshToken);",
										"        pm.environment.set('userId', response.data.user.id);",
										"        pm.environment.set('userRole', response.data.user.role);",
										"        console.log('Tokens saved to environment variables');",
										"    }",
										"}"
									],
									"type": "text/javascript"
								}
							}
						]
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth/refresh",
							"host": ["{{baseUrl}}"],
							"path": ["api", "v1", "auth", "refresh"]
						},
						"description": "Refresh access token using refresh token.",
						"event": [
							{
								"listen": "test",
								"script": {
									"exec": [
										"if (pm.response.code === 200) {",
										"    const response = pm.response.json();",
										"    if (response.success && response.data) {",
										"        pm.environment.set('accessToken', response.data.accessToken);",
										"        pm.environment.set('refreshToken', response.data.refreshToken);",
										"        console.log('Tokens refreshed');",
										"    }",
										"}"
									],
									"type": "text/javascript"
								}
							}
						]
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth/logout",
							"host": ["{{baseUrl}}"],
							"path": ["api", "v1", "auth", "logout"]
						},
						"description": "Logout and invalidate current session."
					},
					"response": []
				},
				{
					"name": "Revoke All Tokens",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth/revoke-all",
							"host": ["{{baseUrl}}"],
							"path": ["api", "v1", "auth", "revoke-all"]
						},
						"description": "Revoke all tokens for the current user."
					},
					"response": []
				}
			],
			"description": "Authentication endpoints for registration, login, and session management."
		},
		{
			"name": "User Management",
			"item": [
				{
					"name": "Get Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth/me",
							"host": ["{{baseUrl}}"],
							"path": ["api", "v1", "auth", "me"]
						},
						"description": "Get current user profile information."
					},
					"response": []
				},
				{
					"name": "Get Token Info",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth/token-info",
							"host": ["{{baseUrl}}"],
							"path": ["api", "v1", "auth", "token-info"]
						},
						"description": "Get information about the current access token."
					},
					"response": []
				},
				{
					"name": "Get User Statistics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/users/stats",
							"host": ["{{baseUrl}}"],
							"path": ["api", "v1", "users", "stats"]
						},
						"description": "Get user statistics (total users, roles, etc.)."
					},
					"response": []
				}
			],
			"description": "User profile and statistics endpoints."
		},
		{
			"name": "Payment Processing",
			"item": [
				{
					"name": "Initialize Job Payment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"amount\": 5000,\n  \"jobId\": \"job-123\",\n  \"description\": \"Plumbing repair service\",\n  \"customerEmail\": \"customer@example.com\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/payments/initialize-job",
							"host": ["{{baseUrl}}"],
							"path": ["api", "v1", "payments", "initialize-job"]
						},
						"description": "Initialize payment for a job."
					},
					"response": []
				},
				{
					"name": "Get Banks List",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/payments/banks",
							"host": ["{{baseUrl}}"],
							"path": ["api", "v1", "payments", "banks"]
						},
						"description": "Get list of supported banks for payments."
					},
					"response": []
				}
			],
			"description": "Payment processing endpoints using Paystack."
		},
		{
			"name": "Admin Management",
			"item": [
				{
					"name": "Get Pending Handymen",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/admin/pending-handymen",
							"host": ["{{baseUrl}}"],
							"path": ["api", "v1", "admin", "pending-handymen"]
						},
						"description": "Get list of handymen pending admin approval. Requires admin authentication."
					},
					"response": []
				},
				{
					"name": "Approve Handyman",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/admin/approve-handyman/{{handymanUserId}}",
							"host": ["{{baseUrl}}"],
							"path": ["api", "v1", "admin", "approve-handyman", "{{handymanUserId}}"]
						},
						"description": "Approve a handyman account. Requires admin authentication."
					},
					"response": []
				},
				{
					"name": "Reject Handyman",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"reason\": \"Insufficient experience or incomplete profile\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/admin/reject-handyman/{{handymanUserId}}",
							"host": ["{{baseUrl}}"],
							"path": ["api", "v1", "admin", "reject-handyman", "{{handymanUserId}}"]
						},
						"description": "Reject a handyman account with optional reason. Requires admin authentication."
					},
					"response": []
				}
			],
			"description": "Admin endpoints for managing handyman approvals."
		},
		{
			"name": "Email Testing",
			"item": [
				{
					"name": "Test Resend Email",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"test@example.com\",\n  \"subject\": \"Test Email\",\n  \"message\": \"This is a test email from the Handyman Management API.\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/test-resend",
							"host": ["{{baseUrl}}"],
							"path": ["api", "test-resend"]
						},
						"description": "Test email sending functionality using Resend."
					},
					"response": []
				}
			],
			"description": "Email testing and verification endpoints."
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Set default base URL if not set",
					"if (!pm.environment.get('baseUrl')) {",
					"    pm.environment.set('baseUrl', 'https://kleva-server.vercel.app');",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://kleva-server.vercel.app",
			"type": "string"
		},
		{
			"key": "accessToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "refreshToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "userId",
			"value": "",
			"type": "string"
		},
		{
			"key": "userRole",
			"value": "",
			"type": "string"
		},
		{
			"key": "userEmail",
			"value": "test@example.com",
			"type": "string"
		},
		{
			"key": "userPassword",
			"value": "Test123!",
			"type": "string"
		},
		{
			"key": "verificationToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "inngestSignature",
			"value": "",
			"type": "string"
		},
		{
			"key": "handymanUserId",
			"value": "",
			"type": "string"
		}
	]
}
